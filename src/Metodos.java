package clase; // ðŸ“Œ Indica que esta clase pertenece al paquete "clase"

// ðŸ“Œ Definimos la clase PersonaMetodos con atributos y mÃ©todos
class PersonaMetodos {
    // ðŸ“Œ ESTOS SON LOS ATRIBUTOS (CaracterÃ­sticas de la persona)
    String nombre;  // Esto es un atributo, almacena el nombre de la persona
    int edad;       // Esto es un atributo, almacena la edad de la persona

    // ðŸ“Œ Constructor: Nos permite crear objetos con valores iniciales
    public PersonaMetodos(String nombre, int edad) {
        this.nombre = nombre;  // Asignamos el valor al atributo nombre
        this.edad = edad;      // Asignamos el valor al atributo edad
    }

    // ðŸ“Œ MÃ‰TODO 1: Un mÃ©todo sin parÃ¡metros que muestra un saludo
    public void saludar() {
        System.out.println("Hola, mi nombre es " + nombre + " y tengo " + edad + " aÃ±os.");
    }

    // ðŸ“Œ MÃ‰TODO 2: Un mÃ©todo que aumenta la edad en 1 (simula un cumpleaÃ±os)
    public void cumplirAnios() {
        edad += 1; // Incrementamos la edad en 1
        System.out.println("Â¡Feliz cumpleaÃ±os! Ahora tengo " + edad + " aÃ±os.");
    }

    // ðŸ“Œ MÃ‰TODO 3: Un mÃ©todo que cambia el nombre de la persona
    public void cambiarNombre(String nuevoNombre) {
        this.nombre = nuevoNombre; // Actualizamos el atributo nombre
        System.out.println("Mi nuevo nombre es " + nombre);
    }
}

// ðŸ“Œ Clase principal donde ejecutamos el cÃ³digo
public class Metodos {
    public static void main(String[] args) {
        // ðŸ“Œ Crear una instancia (objeto) de PersonaMetodos con atributos especÃ­ficos
        PersonaMetodos persona1 = new PersonaMetodos("Carlos", 25);

        // ðŸ“Œ Llamamos al mÃ©todo saludar()
        persona1.saludar();

        // ðŸ“Œ Llamamos al mÃ©todo cumplirAnios()
        persona1.cumplirAnios();

        // ðŸ“Œ Llamamos al mÃ©todo cambiarNombre() para modificar el nombre
        persona1.cambiarNombre("Juan");

        // ðŸ“Œ Volvemos a llamar a saludar() para ver los cambios
        persona1.saludar();
    }
}
